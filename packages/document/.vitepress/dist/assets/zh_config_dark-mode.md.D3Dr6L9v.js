import{n as D}from"./chunks/theme.BmlBtjUe.js";import{d as k,x as C,a0 as b,I as l,c as u,o as A,G as M,a as n,j as c,J as s,t as m,k as r,w as o,au as y}from"./chunks/framework.BcsHb19y.js";const v=k({__name:"dark-mode-basic",setup(g){const[p,a,d]=D(),h=C(!1);if(typeof window<"u"){let t=function(i){h.value=i.matches};const e=window.matchMedia("(prefers-color-scheme: dark)");t(e),e.addEventListener("change",t),b(()=>{e.removeEventListener("change",t)})}return(t,e)=>{const i=l("px-button"),B=l("px-space");return A(),u(M,null,[n(" Current Theme: "+m(r(p))+" ",1),e[4]||(e[4]=c("br",null,null,-1)),n(" matchMedia('(prefers-color-scheme: dark)'): "+m(h.value)+" ",1),e[5]||(e[5]=c("br",null,null,-1)),s(B,null,{default:o(()=>[s(i,{onClick:e[0]||(e[0]=f=>r(a)())},{default:o(()=>[...e[2]||(e[2]=[n("Toggle ",-1)])]),_:1}),s(i,{onClick:e[1]||(e[1]=f=>r(d)()),theme:"info"},{default:o(()=>[...e[3]||(e[3]=[n("Clear Theme",-1)])]),_:1})]),_:1})],64)}}}),T=JSON.parse('{"title":"暗黑模式","description":"","frontmatter":{},"headers":[],"relativePath":"zh/config/dark-mode.md","filePath":"zh/config/dark-mode.md","lastUpdated":null}'),x={name:"zh/config/dark-mode.md"},w=k({...x,setup(g){return(p,a)=>{const d=l("demo-preview");return A(),u("div",null,[a[0]||(a[0]=y(`<h1 id="暗黑模式" tabindex="-1">暗黑模式 <a class="header-anchor" href="#暗黑模式" aria-label="Permalink to “暗黑模式”">​</a></h1><p>Pixelium Design 已把所有颜色变量提取为 CSS 变量。基于此，我们支持了暗黑模式，并且支持默认的自动跟随系统切换和手动切换。</p><ul><li>跟随系统：<code>@media (prefers-color-scheme: dark)</code> 媒体查询自动切换暗黑模式。</li><li>手动切换：通过使用 <code>useThemeMode</code> 钩子手动设置 <code>html</code> 节点上的类名实现。</li></ul><h2 id="usethememode" tabindex="-1">useThemeMode <a class="header-anchor" href="#usethememode" aria-label="Permalink to “useThemeMode”">​</a></h2><p><code>useThemeMode</code> 通过设置 <code>html</code> 节点上的类名实现暗黑 / 明亮主题模式切换，它使得 CSS 选择器或者某些监听器受到影响从而改变组件的主题颜色。</p><p>一个简单的使用例子如下所示：</p><div class="language-ts line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes vitesse-light vitesse-dark" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">import</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> {</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> useThemeMode</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> }</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;"> from</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;"> &#39;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">@pixelium/web-vue</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">// If on-demand import</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">// import { useThemeMode } from &#39;@pixelium/web-vue/es&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">const </span><span style="--shiki-light:#999999;--shiki-dark:#666666;">[</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">mode</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> toggle</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> clear</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> followMedia</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">]</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> useThemeMode</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">()</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p><code>mode</code> 是一个 Vue ref 变量，有 3 个取值：<code>&#39;dark&#39;</code>（暗黑模式）、<code>&#39;light&#39;</code>（明亮模式）、<code>&#39;unset&#39;</code>（跟随系统）。默认值是当前 <code>@media (prefers-color-scheme: dark)</code> 媒体查询对应的主题模式。它将会设置 <code>html</code> 节点上的类名，通过修改它的值就可以切换到暗黑 / 明亮模式。</p><p><code>toggle</code> 是切换暗黑 / 明亮模式的函数。</p><p><code>clear</code> 用于把主题切换到跟随系统。</p><p><code>clear</code> 用于把主题切换到跟随系统。</p><p><code>followMedia</code> 把当前 <code>@media (prefers-color-scheme: dark)</code> 媒体查询对应的主题模式应用到 <code>mode</code> 中。</p><p>可以在这里试一下：</p>`,13)),s(d,{title:"",description:"",code:"%3Ctemplate%3E%0A%09Current%20Theme:%20%7B%7B%20mode%20%7D%7D%0A%09%3Cbr%20/%3E%0A%09matchMedia('(prefers-color-scheme:%20dark)'):%20%7B%7B%20darkMode%20%7D%7D%0A%09%3Cbr%20/%3E%0A%09%3Cpx-space%3E%0A%09%09%3Cpx-button%20@click=%22toggle()%22%3EToggle%20%3C/px-button%3E%0A%09%09%3Cpx-button%20@click=%22clear()%22%20theme=%22info%22%3EClear%20Theme%3C/px-button%3E%0A%09%3C/px-space%3E%0A%3C/template%3E%0A%3Cscript%20setup%20lang=%22ts%22%3E%0Aimport%20%7B%20onBeforeUnmount,%20ref%20%7D%20from%20'vue'%0A%0Aimport%20%7B%20useThemeMode%20%7D%20from%20'@pixelium/web-vue'%0A%0A//%20If%20on-demand%20import%0A//%20import%20%7B%20useThemeMode%20%7D%20from%20'@pixelium/web-vue/es'%0A%0Aconst%20%5Bmode,%20toggle,%20clear%5D%20=%20useThemeMode()%0A%0Aconst%20darkMode%20=%20ref(false)%0A%0Aif%20(typeof%20window%20!==%20'undefined')%20%7B%0A%09const%20darkModeQuery%20=%20window.matchMedia('(prefers-color-scheme:%20dark)')%0A%09function%20handleDarkModeChange(e:%20MediaQueryListEvent%20%7C%20MediaQueryList)%20%7B%0A%09%09darkMode.value%20=%20e.matches%0A%09%7D%0A%09handleDarkModeChange(darkModeQuery)%0A%09darkModeQuery.addEventListener('change',%20handleDarkModeChange)%0A%0A%09onBeforeUnmount(()%20=%3E%20%7B%0A%09%09darkModeQuery.removeEventListener('change',%20handleDarkModeChange)%0A%09%7D)%0A%7D%0A%3C/script%3E%0A",showCode:"%3Cpre%3E%3C!--%3A%3Amarkdown-it-async%3A%3Aujxc27p93lpmodk5vgbyg%3A%3A--%3E%3Ccode%3E%26lt%3Btemplate%26gt%3B%0A%09Current%20Theme%3A%20%7B%7B%20mode%20%7D%7D%0A%09%26lt%3Bbr%20%2F%26gt%3B%0A%09matchMedia(%26%23039%3B(prefers-color-scheme%3A%20dark)%26%23039%3B)%3A%20%7B%7B%20darkMode%20%7D%7D%0A%09%26lt%3Bbr%20%2F%26gt%3B%0A%09%26lt%3Bpx-space%26gt%3B%0A%09%09%26lt%3Bpx-button%20%40click%3D%26quot%3Btoggle()%26quot%3B%26gt%3BToggle%20%26lt%3B%2Fpx-button%26gt%3B%0A%09%09%26lt%3Bpx-button%20%40click%3D%26quot%3Bclear()%26quot%3B%20theme%3D%26quot%3Binfo%26quot%3B%26gt%3BClear%20Theme%26lt%3B%2Fpx-button%26gt%3B%0A%09%26lt%3B%2Fpx-space%26gt%3B%0A%26lt%3B%2Ftemplate%26gt%3B%0A%26lt%3Bscript%20setup%20lang%3D%26quot%3Bts%26quot%3B%26gt%3B%0Aimport%20%7B%20onBeforeUnmount%2C%20ref%20%7D%20from%20%26%23039%3Bvue%26%23039%3B%0A%0Aimport%20%7B%20useThemeMode%20%7D%20from%20%26%23039%3B%40pixelium%2Fweb-vue%26%23039%3B%0A%0A%2F%2F%20If%20on-demand%20import%0A%2F%2F%20import%20%7B%20useThemeMode%20%7D%20from%20%26%23039%3B%40pixelium%2Fweb-vue%2Fes%26%23039%3B%0A%0Aconst%20%5Bmode%2C%20toggle%2C%20clear%5D%20%3D%20useThemeMode()%0A%0Aconst%20darkMode%20%3D%20ref(false)%0A%0Aif%20(typeof%20window%20!%3D%3D%20%26%23039%3Bundefined%26%23039%3B)%20%7B%0A%09const%20darkModeQuery%20%3D%20window.matchMedia(%26%23039%3B(prefers-color-scheme%3A%20dark)%26%23039%3B)%0A%09function%20handleDarkModeChange(e%3A%20MediaQueryListEvent%20%7C%20MediaQueryList)%20%7B%0A%09%09darkMode.value%20%3D%20e.matches%0A%09%7D%0A%09handleDarkModeChange(darkModeQuery)%0A%09darkModeQuery.addEventListener(%26%23039%3Bchange%26%23039%3B%2C%20handleDarkModeChange)%0A%0A%09onBeforeUnmount(()%20%3D%26gt%3B%20%7B%0A%09%09darkModeQuery.removeEventListener(%26%23039%3Bchange%26%23039%3B%2C%20handleDarkModeChange)%0A%09%7D)%0A%7D%0A%26lt%3B%2Fscript%26gt%3B%3C%2Fcode%3E%3C%2Fpre%3E",suffixName:"vue",absolutePath:"D:\\KokoroAme workspace\\pro front end\\pixelium-design\\packages\\document\\zh\\config\\dark-mode-basic.vue",relativePath:"./dark-mode-basic.vue"},{default:o(()=>[s(v)]),_:1})])}}});export{T as __pageData,w as default};
